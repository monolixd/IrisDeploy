from flask import Flask, request, jsonify
import joblib
import numpy as np

app = Flask(__name__)

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
model = joblib.load("iris_model.pkl")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Dictionary ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏•‡∏≤‡∏™‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ
flower_classes = {0: "Setosa", 1: "Versicolor", 2: "Virginica"}

@app.route("/")
def home():
    return "üöÄ Flask API ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!"

@app.route("/predict", methods=["POST"])
def predict():
    try:
        data = request.get_json()
        print(f"üì© ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: {data}")  # Log JSON ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö

        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ JSON ‡∏°‡∏µ key 'features' ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not data or "features" not in data:
            return jsonify({"error": "Invalid JSON format"}), 400

        features = np.array(data["features"]).reshape(1, -1)
        prediction = model.predict(features)
        
        # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ
        flower_name = flower_classes[int(prediction[0])]

        return jsonify({"prediction": flower_name})

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")  # Log Error
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    app.run(debug=True)
